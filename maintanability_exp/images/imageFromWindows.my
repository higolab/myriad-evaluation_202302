import registerJavaVersion from "./images/functions.my"
import cmd from "./images/functions.my"

env() {
    ENV JAVA_HOME C:\\openjdk-${version}
}

imageFromWindowsNanoServer() {
    FROM mcr.microsoft.com/windows/nanoserver:1809
    SHELL ["cmd", "/s", "/c"]
    env()
    USER ContainerAdministrator
    RUN echo Updating PATH: %JAVA_HOME%\bin;%PATH% \
        && setx /M PATH %JAVA_HOME%\bin;%PATH% \
        && echo Complete.
    USER ContainerUser
    
    registerJavaVersion()

    COPY --from=openjdk:${javaVersion}-jdk-windowsservercore-1809 $JAVA_HOME $JAVA_HOME
    
    RUN echo Verifying install ... \
        && echo   javac --version && javac --version \
        && echo   java --version && java --version \
        && echo Complete.
    
    cmd()
}

imageFromWindowsServerCore() {
    FROM mcr.microsoft.com/${base}

    SHELL ["powershell", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"]
    RUN Write-Host 'Enabling TLS 1.2 (https://githubengineering.com/crypto-removal-notice/) ...'; \
        $tls12RegBase = 'HKLM:\\SYSTEM\CurrentControlSet\Control\SecurityProviders\SCHANNEL\Protocols\TLS 1.2'; \
        if (Test-Path $tls12RegBase) { throw ('"{0}" already exists!' -f $tls12RegBase) }; \
        New-Item -Path ('{0}/Client' -f $tls12RegBase) -Force; \
        New-Item -Path ('{0}/Server' -f $tls12RegBase) -Force; \
        New-ItemProperty -Path ('{0}/Client' -f $tls12RegBase) -Name 'DisabledByDefault' -PropertyType DWORD -Value 0 -Force; \
        New-ItemProperty -Path ('{0}/Client' -f $tls12RegBase) -Name 'Enabled' -PropertyType DWORD -Value 1 -Force; \
        New-ItemProperty -Path ('{0}/Server' -f $tls12RegBase) -Name 'DisabledByDefault' -PropertyType DWORD -Value 0 -Force; \
        New-ItemProperty -Path ('{0}/Server' -f $tls12RegBase) -Name 'Enabled' -PropertyType DWORD -Value 1 -Force; \
        Write-Host 'Complete.'

    env()

    RUN $newPath = ('{0}\bin;{1}' -f $env:JAVA_HOME, $env:PATH); \
        Write-Host ('Updating PATH: {0}' -f $newPath); \
        setx /M PATH $newPath; \
        Write-Host 'Complete.'

    registerJavaVersion()

    ENV JAVA_URL ${urlWin}
    ENV JAVA_SHA256 ${shaWin}

    RUN Write-Host ('Downloading {0} ...' -f $env:JAVA_URL); \
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \
        Invoke-WebRequest -Uri $env:JAVA_URL -OutFile 'openjdk.zip'; \
        Write-Host ('Verifying sha256 ({0}) ...' -f $env:JAVA_SHA256); \
        if ((Get-FileHash openjdk.zip -Algorithm sha256).Hash -ne $env:JAVA_SHA256) { \
            Write-Host 'FAILED!'; \
            exit 1; \
        }; \
        \
        Write-Host 'Expanding ...'; \
        New-Item -ItemType Directory -Path C:\temp | Out-Null; \
        Expand-Archive openjdk.zip -DestinationPath C:\temp; \
        Move-Item -Path C:\temp\* -Destination $env:JAVA_HOME; \
        Remove-Item C:\temp; \
        \
        Write-Host 'Removing ...'; \
        Remove-Item openjdk.zip -Force; \
        \
        Write-Host 'Verifying install ...'; \
        Write-Host '  javac --version'; javac --version; \
        Write-Host '  java --version'; java --version; \
        \
        Write-Host 'Complete.'

    cmd()
}