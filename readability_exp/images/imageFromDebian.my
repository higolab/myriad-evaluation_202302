import registerJavaVersion from "./images/functions.my"
import downloadForDebianPerVersion from "./images/functions.my"

imageFromDebian() {
    FROM buildpack-deps:${base}-scm
    RUN set -eux; \
        apt-get update; \
        apt-get install -y --no-install-recommends \
            bzip2 \
            unzip \
            xz-utils \
            \
            binutils \
            \
            fontconfig libfreetype6 \
            \
            ca-certificates p11-kit \
        ; \
        rm -rf /var/lib/apt/lists/*
    
    ENV JAVA_HOME /usr/local/openjdk-${version}
    ENV PATH $JAVA_HOME/bin:$PATH
    ENV LANG C.UTF-8

    registerJavaVersion()

    RUN set -eux; \
        \
        arch="$(dpkg --print-architecture)"; \

    downloadForDebianPerVersion()

        wget --progress=dot:giga -O openjdk.tgz "$downloadUrl"; \
        echo "$downloadSha256 *openjdk.tgz" | sha256sum --strict --check -; \
        \
        mkdir -p "$JAVA_HOME"; \
        tar --extract \
            --file openjdk.tgz \
            --directory "$JAVA_HOME" \
            --strip-components 1 \
            --no-same-owner \
        ; \
        rm openjdk.tgz*; \
        \
        { \
            echo '#!/usr/bin/env bash'; \
            echo 'set -Eeuo pipefail'; \
            echo 'trust extract --overwrite --format=java-cacerts --filter=ca-anchors --purpose=server-auth "$JAVA_HOME/lib/security/cacerts"'; \
        } > /etc/ca-certificates/update.d/docker-openjdk; \
        chmod +x /etc/ca-certificates/update.d/docker-openjdk; \
        /etc/ca-certificates/update.d/docker-openjdk; \
        \
        find "$JAVA_HOME/lib" -name '*.so' -exec dirname '{}' ';' | sort -u > /etc/ld.so.conf.d/docker-openjdk.conf; \
        ldconfig; \
        \
        java -Xshare:dump; \
        \
        fileEncoding="$(echo 'System.out.println(System.getProperty("file.encoding"))' | jshell -s -)"; [ "$fileEncoding" = 'UTF-8' ]; rm -rf ~/.java; \
        javac --version; \
        java --version
    CMD ["jshell"]
}